{"version":3,"sources":["utilities/api.js","components/Account.js","components/Activities.js","components/Home.js","components/MyRoutines.js","components/PublicRoutines.js","components/Logout.js","index.js"],"names":["BASE_URL","apiCall","url","method","token","body","data","fetch","setToken","getFetchOptions","response","json","error","console","toUpperCase","headers","JSON","stringify","Object","assign","fetchActivities","log","fetchRoutines","Account","user","setUser","useState","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","isRegistered","setIsRegistered","handleSubmit","event","preventDefault","login","alert","name","message","resetInputs","register","onSubmit","required","type","placeholder","value","onChange","target","length","style","color","onClick","Activities","activities","setActivities","useEffect","getActivities","map","activity","id","Home","MyRoutines","PublicRoutines","routines","setRoutines","detailRoutines","setDetailRoutines","useHistory","getRoutines","routine","e","handleRoutineClick","goal","creatorName","Logout","loggingOut","setLoggingOut","className","zIndex","App","to","activeClassName","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c1d1d17.chunk.js","sourcesContent":["// export const BASE_URL = 'https://pacific-falls-66418.herokuapp.com/api/'\n\n// TODO: there was some issue with our API (500 Internal Service Error)\nexport const BASE_URL = 'http://fitnesstrac-kr.herokuapp.com/api/'\n\nexport const apiCall = async (url, method = 'GET', token, body) => {\n  let data = false;\n  try {\n    const response = await fetch(BASE_URL + url, setToken(getFetchOptions(method, body), token));\n    data = await response.json();\n\n    if (data.error) {\n      throw data.error;\n    }\n  } catch (err) {\n    console.error(err);\n  }\n  return data;\n}\n\nconst getFetchOptions = (method, body) => {\n  return {\n    method: method.toUpperCase(),\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }\n}\n\nconst setToken = (body, token) => {\n  if (token) { body.headers = Object.assign(body.headers, { 'Authorization': `Bearer ${token}` }) }\n  return body;\n}\n\nexport const fetchActivities = async() => {\n  const data = await apiCall('/activities', \"GET\", null)\n  console.log(\"data here:\", data)\n  return data || []\n}\n\nexport const fetchRoutines = async() => {\n  const data = await apiCall('/routines', \"GET\", null)\n  console.log(\"data here:\", data)\n  return data || []\n}","import React from 'react';\nimport { useState } from 'react';\nimport { apiCall } from '../utilities/api';\n\n\nconst Account = ({ token, setToken, user, setUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isRegistered, setIsRegistered] = useState(true);\n  \n  // console.log('user prop', user);\n  // console.log('token prop', token);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    if (isRegistered) {\n      const login = await apiCall('users/login', 'POST', null, {username, password});\n      // console.log('login', login);\n      if (login.error) {\n        alert(`${login.name}. ${login.message} If you are not an existing user, please register now.`);\n      } else if (login.user && login.token){\n        setUser(login.user);\n        setToken(login.token);\n        resetInputs();\n      } else {\n        alert('There was an error during login.')\n      }\n    } else {\n      if (password === confirmPassword) {\n        const register = await apiCall('users/register', 'POST', null, {username, password});\n        // console.log('register', register);\n        if (register.error) {\n          alert(`${register.name}. ${register.message}`)\n        } else if (register.user && register.token) {\n          setUser(register.user);\n          setToken(register.token);\n          resetInputs();\n        } else {\n          alert('There was an error during registration.')\n        }\n      } else {\n        alert(\"The password and password confirmation don't match!\");\n      }\n    }\n  }\n\n  const resetInputs = () => {\n    setUsername('');\n    setPassword('');\n    setConfirmPassword('');\n  }\n\n  return (\n    <>\n      <h1>Account</h1>\n      {\n        (user && token) ?\n        <>\n          <h3>User Profile</h3>\n          {/* Add whatever info we want to show here if user is logged in */}\n          <p>You are logged in as { user.username }.</p>\n          <p>Add whatever information/instructions we want.</p>\n        </> :\n        <>\n          <form onSubmit={ handleSubmit } >\n            <h3>{ isRegistered ? \"Login\" : \"Register\"}</h3>\n            <div>\n              <div>Username:</div>\n              <input\n                required\n                type='text'\n                name='username'\n                placeholder='Username'\n                value={ username }\n                onChange={ (event) => { setUsername(event.target.value) }}/>\n            </div>\n            <div>\n              <div>Password:</div>\n              <input\n                required\n                type='password'\n                name='password'\n                placeholder='Password'\n                value={ password }\n                onChange={ (event) => { setPassword(event.target.value) }}/>\n            </div>\n            { !isRegistered ?\n              <div>\n                <div>Confirm Password:</div>\n                <input\n                  type='password'\n                  name='confirm-password'\n                  placeholder='Password'\n                  onChange={(event) => { \n                    setConfirmPassword(event.target.value) \n                }}/>\n                {\n                  (password && password.length > 0 && password.length < 8) ? \n                  <p style={{color: 'red'}}>Password must be at least 8 characters.</p> :\n                  null \n                }\n                {\n                  (password && confirmPassword && password !== confirmPassword) ?\n                  <p style={{color: 'red'}}>Passwords don't match!</p> :\n                  null\n                }\n              </div> :\n              null\n            }\n            <button type='submit'>{ isRegistered ? \"Login\" : \"Register\" }</button>\n            {\n              isRegistered ?\n              <>\n                <p>New to Fitness Trackr?</p>\n                <p>Register a new account.</p>\n                <button \n                  type='submit'\n                  onClick={(event) => {\n                    event.preventDefault();\n                    setIsRegistered(false);\n                }}>Register New User</button>\n              </> :\n              <>\n                <p>Already a Fitness Trac.kr user?</p>\n                <button\n                  type='submit'\n                  onClick={(event) => {\n                    event.preventDefault();\n                    setIsRegistered(true);\n                  }}\n                >Just Login</button>\n              </>\n            }\n          </form>\n        </>\n      }\n    </>\n  )\n}\n\nexport default Account;","import React, { useState, useEffect } from \"react\";\nimport { fetchActivities } from \"../utilities/api\";\n\n\nconst Activities = ({activities, setActivities}) => {\n\n    useEffect(() => {\n        (async () => {\n            const getActivities = await fetchActivities();\n            console.log(getActivities)\n            setActivities(getActivities)\n        })()\n    }, [])\n\n    return <>\n    <h1>Publicactivity</h1>\n\n    <div>\n        {\n            activities.map((activity) => {\n                //console.log(\"activities:\",routine.activities)\n                return <div key={activity.id}>                    \n                    <div>{activity.name}</div>\n                                 \n                </div>\n                })\n            } \n        </div>\n    </>\n    }\n    \n\nexport default Activities;","import React, { useState } from \"react\";\n\nconst Home = () => {\n    return <>\n        \n        <h1>Welcome to Fitness Tracker Yo!</h1>\n            <h2>Sign up to create a personalized workout plan based on you daily activity to reach out goals!</h2>\n    </>\n}\n\nexport default Home;","import React, { useState } from \"react\";\n\nconst MyRoutines = () => {\n\nreturn <>\n<h1>MyRoutines</h1>\n</>\n}\n\nexport default MyRoutines;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { fetchRoutines } from \"../utilities/api\";\n\n\nconst PublicRoutines = ({routines, setRoutines, detailRoutines, setDetailRoutines}) => {\n    \n    const history = useHistory();\n\n    // const handleRoutineClick = (e, routine) => {\n    //     setDetailRoutines(routines)\n    // }\n\n    useEffect(() => {\n        (async () => {\n            const getRoutines = await fetchRoutines();\n            console.log(getRoutines)\n            setRoutines(getRoutines)\n            //console.log(setRoutines)\n        })()\n    }, [])\n\n    return <>\n    <h1>PublicRoutines</h1>\n\n    <div>\n        {\n            routines.map((routine) => {\n                //console.log(\"activities:\",routine.activities)\n                return <div onClick={(e) => { handleRoutineClick(e, routine) }} key={routine.id}>                    \n                    <div>Name: {routine.name}</div>\n                    <div>Goal: {routine.goal}</div>\n                    <div>Creator: {routine.creatorName}</div>                            \n                </div>\n                })\n            } \n        </div>\n    </>\n    }\n    \n    export default PublicRoutines;","import React from 'react';\n\nconst Logout = ({ loggingOut, setLoggingOut, setUser, setToken }) => {\n  const handleLogout = (event) => {\n    event.preventDefault();\n    setUser(false);\n    setToken('');\n    setLoggingOut(false);\n  }\n\n  const handleCancel = (event) => {\n    event.preventDefault();\n    setLoggingOut(false);\n  }\n\n  return (\n    loggingOut ?\n    <>\n      <div className='logout-popup' style={{zIndex: '4'}}>\n        <form>\n          <h3>Are you sure?</h3>\n          <button onClick={ handleLogout }>Logout</button>\n          <button onClick={ handleCancel }>Cancel</button>\n        </form>\n      </div>\n    </> :\n    null\n  )\n}\n\nexport default Logout;","import { React, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { NavLink, BrowserRouter, Route } from \"react-router-dom\";\nimport { Account, Activities, Home, MyRoutines, PublicRoutines, Logout } from './components/index';\n\n//-Uregistered:\n  //see a Sign Up/Sign In form\n  //register\n  ///can edit messages if error during registration\n  //tabbed navigation for Routines and activities\n  //see list of all activities\n\n//-Registered:\n  //login\n  //can edit messages if error during registration\n  //stay logged in between page visits\n  //log out\n  //see tabbed navigation for Routines, My Routines (once logged in), and Activities (with matching routes)\n  //Form to create a new routine(routine name, goal, creator username)\n  //For owned routine\n    //update the name and goal for the routine\n    //delete the entire routine\n    // add an activity to a routine via a form which has a dropdown for all activities, an inputs for count and duration\n    //update the duration or count of any activity on the routine\n    //remove any activity from the routine\n  //On Activities tab\n    //show form to create new activity (name and description)\n    //show error if already exists\n    \nconst App = () => {\n\n  // Set useStates\n  const [user, setUser] = useState(false);\n  const [token, setToken] = useState('');\n  const [activities, setActivities]= useState([]);\n  const [routines, setRoutines] = useState([]);\n  const [detailRoutines, setDetailRoutines]= useState([]);\n  const [loggingOut, setLoggingOut] = useState(false);\n\n  return (\n    <main>\n     \n      <nav>\n        \n          <NavLink to=\"/home\" className=\"navlink\" activeClassName=\"active\">\n            Home\n          </NavLink>\n\n          <NavLink to=\"/public-routines\" className=\"navlink\" activeClassName=\"active\">\n            Public Routines\n          </NavLink>\n          \n          {\n            (token && user) ?\n            <>\n              <NavLink to=\"/my-routines\" className=\"navlink\" activeClassName=\"active\">\n                My Routines\n              </NavLink>\n            </> :\n            null\n          }\n\n          <NavLink to=\"/activities\" className=\"navlink\" activeClassName=\"active\">\n            Activities\n          </NavLink>\n\n          <NavLink to=\"/account\" className=\"navlink\" activeClassName=\"active\">\n            {(token && user) ? 'My Account' : 'Login/Register'}\n          </NavLink>\n\n          {/* TODO: Fix styling so this matches Navlinks and doesn't look like button */}\n          {\n            (token && user) ?\n            <input \n              type='button'\n              value='Logout' \n              className=\"navlink\" \n              onClick={(event) => {\n                event.preventDefault();\n                setLoggingOut(true);\n              }}\n            /> :\n            null \n          }\n          \n      </nav>\n\n      {/* Routes and components */}\n      \n      <Route exact path='/'>\n        {/* to account page to login/register maybe */}\n        <Account token={token} setToken={setToken} user={user} setUser={setUser} />\n      </Route>\n\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route path=\"/public-routines\">\n        <Route path= \"/routines/:routineId\">\n          \n        </Route>\n        <PublicRoutines \n          routines={routines} \n          setRoutines={setRoutines}\n          detailRoutines={detailRoutines} \n          setDetailRoutines={setDetailRoutines}\n        />\n      </Route>\n\n      <Route path=\"/my-routines\">\n        <MyRoutines />\n      </Route>\n      \n      <Route path=\"/activities\">\n        <Route path=\"/activities/:activityId\">\n\n        </Route>\n        <Activities \n          activities={activities} \n          setActivities={setActivities}\n        />\n      </Route>\n\n      <Route path=\"/account\">\n        <Account token={token} setToken={setToken} user={user} setUser={setUser} />\n      </Route>\n\n      <Logout loggingOut={loggingOut} setLoggingOut={setLoggingOut} setUser={setUser} setToken={setToken} />\n    \n    </main>\n  )\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('app')\n)"],"sourceRoot":""}